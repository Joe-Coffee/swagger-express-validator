{
  "swagger": "2.0",
  "info": {
    "title": "Validately API",
    "version": "1.0.0"
  },
  "host": "api-staging.validately.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application\/json"
  ],
  "produces": [
    "application\/json"
  ],
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "\/status": {
      "get": {
        "summary": "API status",
        "responses": {
          "200": {
            "description": "Status",
            "schema": {
              "$ref": "#\/definitions\/Status"
            },
            "examples": {
              "application\/json": {
                "status": "OK"
              }
            }
          }
        }
      }
    },
    "\/products": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Products",
        "responses": {
          "200": {
            "description": "Products",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Product"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create product",
        "parameters": [
          {
            "name": "Product",
            "description": "Product",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "$ref": "#\/definitions\/Product-name"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product",
            "schema": {
              "$ref": "#\/definitions\/Product"
            }
          }
        }
      }
    },
    "\/products\/{id}": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Product-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Product details",
        "responses": {
          "200": {
            "description": "Product",
            "schema": {
              "$ref": "#\/definitions\/Product"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update product",
        "parameters": [
          {
            "name": "Product",
            "description": "Product",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "$ref": "#\/definitions\/Product-name"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product",
            "schema": {
              "$ref": "#\/definitions\/Product"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete Product",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "\/products\/{id}\/feedback_surveys": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Product-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List feedback surveys",
        "description": "Don't return tests where `type = 'unmoderated' OR url LIKE '%wireframe_site%' OR webrtc = 0 OR source = 'usamp'`",
        "responses": {
          "200": {
            "description": "Feedback Survey",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Feedback_Survey"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create feedback survey",
        "description": "When url is created\/updated API should send pub\/sub with `{url: \"http:\/\/example.com\"}` to e.g. `projects\/vldt-staging\/topics\/thumbnails-staging`.\n\nWhen type is set to `moderated` and `source = 'url'` `respondents` should be null or absent",
        "parameters": [
          {
            "name": "Feedback Survey",
            "description": "Feedback Survey",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "$ref": "#\/definitions\/Feedback_Survey-name"
                },
                "type": {
                  "$ref": "#\/definitions\/Feedback_Survey-type"
                },
                "url": {
                  "$ref": "#\/definitions\/Feedback_Survey-url"
                },
                "source": {
                  "$ref": "#\/definitions\/Feedback_Survey-source"
                },
                "show": {
                  "$ref": "#\/definitions\/Feedback_Survey-show"
                },
                "respondents": {
                  "$ref": "#\/definitions\/Feedback_Survey-respondents"
                },
                "email": {
                  "$ref": "#\/definitions\/Feedback_Survey-email"
                },
                "title": {
                  "$ref": "#\/definitions\/Feedback_Survey-title"
                },
                "message": {
                  "$ref": "#\/definitions\/Feedback_Survey-message"
                },
                "button": {
                  "$ref": "#\/definitions\/Feedback_Survey-button"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback Survey",
            "schema": {
              "$ref": "#\/definitions\/Feedback_Survey"
            }
          }
        }
      }
    },
    "\/feedback_surveys\/{id}": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Feedback_Survey-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Feedback Survey",
        "description": "To get additional attributes run `\/home\/ubuntu\/validately\/bin\/yiic feedback\/attributes --id=1,2` which returns json with status e.g. `[{id: 1, status: \"Pending\", test_price: 0, source_price: 0, upgrade: false, completes: 0},{id: 2, status: \"Active\", test_price: 0, source_price: 0, upgrade: false, completes: 1}]`",
        "responses": {
          "200": {
            "description": "Feedback Survey",
            "schema": {
              "$ref": "#\/definitions\/Feedback_Survey"
            }
          }
        }
      },
      "post": {
        "summary": "Update Feedback Survey",
        "description": "When `feedback_surveys.status != 'Pending'` only fields below can be updated.\n\n* name\n* respondents - can only be changed when https:\/\/github.com\/validately\/validately\/blob\/master\/modules\/feedback\/models\/Feedback_Surveys.php#L1413\n* title\n* button\n* message\n\nWhen `feedback_surveys.status IN ('Active', 'Paused') AND feedback_surveys.source NOT IN ('panel')` test can be paused or closed, fields below can be updated\n\n* paused\n* closed",
        "parameters": [
          {
            "name": "Feedback Survey",
            "description": "Feedback Survey",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "$ref": "#\/definitions\/Feedback_Survey-name"
                },
                "type": {
                  "$ref": "#\/definitions\/Feedback_Survey-type"
                },
                "url": {
                  "$ref": "#\/definitions\/Feedback_Survey-url"
                },
                "source": {
                  "$ref": "#\/definitions\/Feedback_Survey-source"
                },
                "screener": {
                  "$ref": "#\/definitions\/Feedback_Survey-screener"
                },
                "show": {
                  "$ref": "#\/definitions\/Feedback_Survey-show"
                },
                "respondents": {
                  "$ref": "#\/definitions\/Feedback_Survey-respondents"
                },
                "email": {
                  "$ref": "#\/definitions\/Feedback_Survey-email"
                },
                "paused": {
                  "$ref": "#\/definitions\/Timestamp"
                },
                "launched": {
                  "$ref": "#\/definitions\/Timestamp"
                },
                "completed": {
                  "$ref": "#\/definitions\/Timestamp"
                },
                "closed": {
                  "$ref": "#\/definitions\/Timestamp"
                },
                "title": {
                  "$ref": "#\/definitions\/Feedback_Survey-title"
                },
                "message": {
                  "$ref": "#\/definitions\/Feedback_Survey-message"
                },
                "button": {
                  "$ref": "#\/definitions\/Feedback_Survey-button"
                },
                "bar": {
                  "$ref": "#\/definitions\/Feedback_Survey-bar"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback Survey",
            "schema": {
              "$ref": "#\/definitions\/Feedback_Survey"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete Feedback Survey",
        "description": "Can be deleted when `status IN ('Pending', 'Closed', 'Completed')`",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "\/feedback_surveys\/{id}\/duplicate": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Feedback_Survey-id"
        }
      ],
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Feedback Survey",
        "description": "To duplicate run `\/home\/ubuntu\/validately\/bin\/yiic feedback\/duplicate --id=1` which returns `id` of new Feedback Survey e.g. `{ id: 2 }`\n\nCan be duplicated when `status NOT IN ('Pending')`\n\nWhen `source IN ('panel')` make sure to hit respective APIs to create orders\/settings",
        "responses": {
          "200": {
            "description": "Feedback Survey",
            "schema": {
              "$ref": "#\/definitions\/Feedback_Survey"
            }
          }
        }
      }
    },
    "\/feedback_surveys\/{id}\/asset": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Feedback_Survey-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Asset",
        "description": "To get Asset you need to get Thumbnail and to get it you need to compare feedback_surveys.url and thumbnails.url",
        "responses": {
          "200": {
            "description": "Asset",
            "schema": {
              "$ref": "#\/definitions\/Asset"
            }
          }
        }
      }
    },
    "\/feedback_surveys\/{id}\/results": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Feedback_Survey-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Results",
        "description": "JSON object with results",
        "responses": {
          "200": {
            "description": "Results",
            "schema": {
              "description": "Results",
              "type": "object"
            },
            "examples": {
              "application\/json": "{\n  \"id\": 1,\n  \"feedback_tasks\": [\n    {\n      \"id\": 1,\n      \"task\": \"Task\",\n      \"passed\": 1,\n      \"failed\": 0,\n      \"fedback_inputs\": [],\n      \"tracker_tasks\": [\n        {\n          \"id\": 1,\n          \"timestamp\": 1,\n          \"duration\": 1,\n          \"passed\": true,\n          \"tracker_person\": {\n            \"id\": 1,\n            \"...\": \"...\"\n          }\n        }\n      ]\n    }\n  ],\n  \"fedback_inputs\": [\n    {\n      \"id\": 1,\n      \"label\": \"Label\",\n      \"type\": \"radio\",\n      \"options\": [\n        {\n          \"label\": \"Yes\",\n          \"value\": \"{uuid}\",\n          \"tracker_people\": [\n            {\n              \"id\": 1,\n              \"...\": \"...\"\n            }\n          ],\n          \"feedback_inputs\": []\n        },\n        {\n          \"label\": \"No\",\n          \"value\": \"{uuid}\",\n          \"tracker_people\": [\n            {\n              \"id\": 2,\n              \"...\": \"...\"\n            }\n          ],\n          \"feedback_inputs\": []\n        }\n      ],\n      \"tracker_values\": [\n        {\n          \"id\": 1,\n          \"value\": \"{uuid}\",\n          \"tracker_person\": {\n              \"id\": 1,\n              \"...\": \"...\"\n          }\n        },\n        {\n          \"id\": 1,\n          \"value\": \"{uuid}\",\n          \"tracker_person\": {\n              \"id\": 2,\n              \"...\": \"...\"\n          }\n        }\n      ]\n    }\n  ]\n}"
            }
          }
        }
      }
    },
    "\/feedback_surveys\/{id}\/feedback_inputs": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Feedback_Survey-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List Feedback Inputs",
        "description": "Feedback Inputs `WHERE feedback_inputs.parent_id IS NULL`",
        "responses": {
          "200": {
            "description": "Feedback Inputs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Feedback_Input"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Feedback Input",
        "description": "When `feedback_surveys.status != 'Pending'` return `403 Forbidden`",
        "parameters": [
          {
            "name": "Feedback Input",
            "description": "Feedback Input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "label",
                "type"
              ],
              "properties": {
                "label": {
                  "$ref": "#\/definitions\/Feedback_Input-label"
                },
                "type": {
                  "$ref": "#\/definitions\/Feedback_Input-type"
                },
                "options": {
                  "$ref": "#\/definitions\/Feedback_Input-options"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback Input",
            "schema": {
              "$ref": "#\/definitions\/Feedback_Input"
            }
          }
        }
      }
    },
    "\/feedback_surveys\/{id}\/feedback_tasks": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Feedback_Survey-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List Feedback Tasks",
        "responses": {
          "200": {
            "description": "Feedback Tasks",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Feedback_Task"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Feedback Task",
        "description": "When test `feedback_surveys.status != 'Pending'` return `403 Forbidden`",
        "parameters": [
          {
            "name": "Feedback Task",
            "description": "Feedback Task",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "task"
              ],
              "properties": {
                "task": {
                  "$ref": "#\/definitions\/Feedback_Task-task"
                },
                "start_url": {
                  "$ref": "#\/definitions\/Feedback_Task-start_url"
                },
                "end_url": {
                  "$ref": "#\/definitions\/Feedback_Task-end_url"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback Task",
            "schema": {
              "$ref": "#\/definitions\/Feedback_Task"
            }
          }
        }
      }
    },
    "\/feedback_surveys\/{id}\/feedback_tags": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Feedback_Survey-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List Feedback Tags",
        "responses": {
          "200": {
            "description": "Feedback Tags",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Feedback_Tag"
              }
            }
          }
        }
      }
    },
    "\/feedback_surveys\/{id}\/tracker_sessions": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Feedback_Survey-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List Tracker Sessions",
        "description": "To get CSV run `\/home\/ubuntu\/validately\/bin\/yiic feedback\/csv --id=1 --tracker_session_ids=1,2,...`\n\nSend CSV only when `Accept: text\/csv` header is set",
        "parameters": [
          {
            "name": "ids",
            "description": "List of Tracker Session Id",
            "required": false,
            "type": "array",
            "in": "query",
            "collectionFormat": "multi",
            "items": {
              "type": "integer",
              "format": "int32",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracker Sessions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tracker_Session"
              }
            }
          }
        }
      }
    },
    "\/feedback_surveys\/{id}\/tracker_clips": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Feedback_Survey-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List Tracker Clips",
        "parameters": [
          {
            "name": "tags",
            "description": "List of Feedback Tags",
            "required": false,
            "type": "array",
            "in": "query",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracker Clips",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tracker_Clip"
              }
            }
          }
        }
      }
    },
    "\/feedback_surveys\/{id}\/tracker_flags": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Feedback_Survey-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List Tracker Flags",
        "description": "Send CSV only when `Accept: text\/csv` header is set",
        "parameters": [
          {
            "name": "tags",
            "description": "List of Feedback Tags",
            "required": false,
            "type": "array",
            "in": "query",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracker Flags",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tracker_Flag"
              }
            }
          }
        }
      }
    },
    "\/feedback_tasks\/{id}": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Feedback_Task-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Feedback Task",
        "responses": {
          "200": {
            "description": "Feedback Task",
            "schema": {
              "$ref": "#\/definitions\/Feedback_Task"
            }
          }
        }
      },
      "post": {
        "summary": "Update Feedback Task",
        "description": "When `feedback_surveys.status != 'Pending'` only `task` can be updated\n\nWhen sequence is negative move down, when positive move up",
        "parameters": [
          {
            "name": "Feedback Task",
            "description": "Feedback Task",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "$ref": "#\/definitions\/Feedback_Task-task"
                },
                "start_url": {
                  "$ref": "#\/definitions\/Feedback_Task-start_url"
                },
                "end_url": {
                  "$ref": "#\/definitions\/Feedback_Task-end_url"
                },
                "sequence": {
                  "$ref": "#\/definitions\/Feedback_Task-sequence-update"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback Task",
            "schema": {
              "$ref": "#\/definitions\/Feedback_Task"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete Feedback Task",
        "description": "When `feedback_surveys.status != 'Pending'` return `403 Forbidden`",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "\/feedback_tasks\/{id}\/feedback_inputs": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Feedback_Survey-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List Feedback Inputs",
        "description": "Feedback Inputs `WHERE feedback_inputs.parent_id IS NULL`",
        "responses": {
          "200": {
            "description": "Feedback Inputs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Feedback_Input"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Feedback Input",
        "description": "When `feedback_surveys.status != 'Pending'` return `403 Forbidden`",
        "parameters": [
          {
            "name": "Feedback Input",
            "description": "Feedback Input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "label",
                "type"
              ],
              "properties": {
                "label": {
                  "$ref": "#\/definitions\/Feedback_Input-label"
                },
                "type": {
                  "$ref": "#\/definitions\/Feedback_Input-type"
                },
                "options": {
                  "$ref": "#\/definitions\/Feedback_Input-options"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback Input",
            "schema": {
              "$ref": "#\/definitions\/Feedback_Input"
            }
          }
        }
      }
    },
    "\/feedback_inputs\/{id}": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Feedback_Input-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Feedback Input",
        "responses": {
          "200": {
            "description": "Feedback Input",
            "schema": {
              "$ref": "#\/definitions\/Feedback_Input"
            }
          }
        }
      },
      "post": {
        "summary": "Update Feedback Input",
        "description": "When `feedback_surveys.status != 'Pending'` only `label` can be updated (including `options.[].label`)\n\nWhen sequence is negative move down, when positive move up",
        "parameters": [
          {
            "name": "Feedback Input",
            "description": "Feedback Input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "$ref": "#\/definitions\/Feedback_Input-label"
                },
                "options": {
                  "$ref": "#\/definitions\/Feedback_Input-options"
                },
                "sequence": {
                  "$ref": "#\/definitions\/Feedback_Input-sequence-update"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback Input",
            "schema": {
              "$ref": "#\/definitions\/Feedback_Input"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete Feedback Input",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "\/feedback_inputs\/{id}\/feedback_inputs\/{parent_value}": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Feedback_Input-id"
        },
        {
          "name": "parent_value",
          "description": "Parent value",
          "in": "path",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List Feedback Input children",
        "responses": {
          "200": {
            "description": "Feedback Inputs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Feedback_Input"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Feedback Input",
        "description": "When `feedback_surveys.status != 'Pending'` return `403 Forbidden`",
        "parameters": [
          {
            "name": "Feedback Input",
            "description": "Feedback Input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "label",
                "type"
              ],
              "properties": {
                "label": {
                  "$ref": "#\/definitions\/Feedback_Input-label"
                },
                "type": {
                  "$ref": "#\/definitions\/Feedback_Input-type"
                },
                "options": {
                  "$ref": "#\/definitions\/Feedback_Input-options"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback Input",
            "schema": {
              "$ref": "#\/definitions\/Feedback_Input"
            }
          }
        }
      }
    },
    "\/tracker_sessions\/{id}": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Tracker_Session-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Tracker Session",
        "responses": {
          "200": {
            "description": "Tracker Session",
            "schema": {
              "$ref": "#\/definitions\/Tracker_Session"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Tracker Session",
        "parameters": [
          {
            "name": "Tracker Session",
            "description": "`rating` and `feedback` can be set once and can't be changed",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "rating",
                "feedback"
              ],
              "properties": {
                "rating": {
                  "$ref": "#\/definitions\/Tracker_Session-rating"
                },
                "feedbck": {
                  "$ref": "#\/definitions\/Tracker_Session-feedback"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracker Session",
            "schema": {
              "$ref": "#\/definitions\/Tracker_Session"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete Tracker Session",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "\/tracker_sessions\/{id}\/tracker_person": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Tracker_Session-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Tracker Person",
        "responses": {
          "200": {
            "description": "Tracker Person",
            "schema": {
              "$ref": "#\/definitions\/Tracker_Person"
            }
          }
        }
      }
    },
    "\/tracker_sessions\/{id}\/tracker_share": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Tracker_Session-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Tracker Share",
        "responses": {
          "200": {
            "description": "Tracker Share",
            "schema": {
              "$ref": "#\/definitions\/Tracker_Share"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Tracker Share",
        "responses": {
          "200": {
            "description": "Tracker Share",
            "schema": {
              "$ref": "#\/definitions\/Tracker_Share"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete Tracker Share",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "\/tracker_sessions\/{id}\/tracker_clips": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Tracker_Session-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List Tracker Clips",
        "responses": {
          "200": {
            "description": "Tracker Clips",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tracker_Clip"
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create Tracker Clip",
        "parameters": [
          {
            "name": "Tracker Clip",
            "description": "Tracker Clip",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "start",
                "end"
              ],
              "properties": {
                "name": {
                  "$ref": "#\/definitions\/Tracker_Clip-name"
                },
                "start": {
                  "$ref": "#\/definitions\/Tracker_Clip-start"
                },
                "end": {
                  "$ref": "#\/definitions\/Tracker_Clip-end"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracker Clip",
            "schema": {
              "$ref": "#\/definitions\/Tracker_Clip"
            }
          }
        }
      }
    },
    "\/tracker_sessions\/{id}\/tracker_flags": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Tracker_Session-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List Tracker Flags",
        "responses": {
          "200": {
            "description": "Tracker Flags",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tracker_Flag"
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create Tracker Flag",
        "parameters": [
          {
            "name": "Tracker Flag",
            "description": "Tracker Flag",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "start"
              ],
              "properties": {
                "description": {
                  "$ref": "#\/definitions\/Tracker_Flag-description"
                },
                "start": {
                  "$ref": "#\/definitions\/Tracker_Flag-start"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracker Flag",
            "schema": {
              "$ref": "#\/definitions\/Tracker_Flag"
            }
          }
        }
      }
    },
    "\/tracker_sessions\/{id}\/tracker_tasks": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Tracker_Session-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List Tracker Tasks",
        "responses": {
          "200": {
            "description": "Tracker Tasks",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tracker_Task"
              }
            }
          }
        }
      }
    },
    "\/tracker_clips\/{id}": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Tracker_Clip-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Tracker Clip",
        "responses": {
          "200": {
            "description": "Tracker Clip",
            "schema": {
              "$ref": "#\/definitions\/Tracker_Clip"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete Tracker Clip",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "\/tracker_clips\/{id}\/tracker_share": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Tracker_Clip-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Tracker Share",
        "responses": {
          "200": {
            "description": "Tracker Share",
            "schema": {
              "$ref": "#\/definitions\/Tracker_Share"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Tracker Share",
        "responses": {
          "200": {
            "description": "Tracker Share",
            "schema": {
              "$ref": "#\/definitions\/Tracker_Share"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete Tracker Share",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "\/tracker_flags\/{id}": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Tracker_Flag-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Tracker Flag",
        "responses": {
          "200": {
            "description": "Tracker Flag",
            "schema": {
              "$ref": "#\/definitions\/Tracker_Flag"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Tracker Flag",
        "description": "`description` can be updated when `description IS NOT NULL` and can't be set to null",
        "parameters": [
          {
            "name": "Tracker Flag",
            "description": "Tracker Flag",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "$ref": "#\/definitions\/Tracker_Flag-description"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracker Flag",
            "schema": {
              "$ref": "#\/definitions\/Tracker_Flag"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete Tracker Flag",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "\/tracker_flags\/{id}\/user": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Tracker_Flag-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "User",
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "$ref": "#\/definitions\/User"
            }
          }
        }
      }
    },
    "\/tracker_tasks\/{id}": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Tracker_Task-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Tracker Task",
        "responses": {
          "200": {
            "description": "Tracker Task",
            "schema": {
              "$ref": "#\/definitions\/Tracker_Task"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Tracker Task",
        "parameters": [
          {
            "name": "Tracker Task",
            "description": "Tracker Task",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "passed": {
                  "$ref": "#\/definitions\/Tracker_Task-passed"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracker Task",
            "schema": {
              "$ref": "#\/definitions\/Tracker_Task"
            }
          }
        }
      }
    },
    "\/errors\/{code}": {
      "parameters": [
        {
          "name": "code",
          "description": "HTTP status code",
          "type": "integer",
          "format": "int32",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get error",
        "responses": {
          "400": {
            "$ref": "#\/responses\/400"
          },
          "401": {
            "$ref": "#\/responses\/401"
          },
          "403": {
            "$ref": "#\/responses\/403"
          },
          "404": {
            "$ref": "#\/responses\/404"
          },
          "405": {
            "$ref": "#\/responses\/405"
          },
          "500": {
            "$ref": "#\/responses\/500"
          },
          "502": {
            "$ref": "#\/responses\/502"
          },
          "503": {
            "$ref": "#\/responses\/503"
          },
          "504": {
            "$ref": "#\/responses\/504"
          }
        }
      }
    },
    "\/feedback_surveys\/{uuid}\/": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Feedback_Survey-uuid"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Feedback Survey",
        "description": "To get data for Pending test `\/home\/ubuntu\/validately\/bin\/yiic feedback\/data --id={id} --test={token}`\n\nTo get data for Active test run `\/home\/ubuntu\/validately\/bin\/yiic feedback\/data --id={id} [--name={name} --email={email} --panel={panel}]`\n\nIf test has `type = 'unmoderated' AND source = 'url' AND screener = 1` and path parameter `id` is absent add `--screener={screener sharable url}`\n\nIf test has `type = 'unmoderated' AND source = 'url' AND screener = 1` and path parameter `id` is present check against `\/testers\/{uuid}` (if continue call it like for Active test otherwise 4xx)\n\nIf test has `type = 'unmoderated' AND source = 'panel' AND screener = 1` and path parameter `id` is present check against `\/notifications\/{uuid}` if valid, and against `\/testers\/{uuid}` (if continue call it like for Active test, if 404 add `--screener={screener sharable url}` parameter otherwise 4xx)",
        "responses": {
          "200": {
            "description": "Feedback Survey",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application\/json": "{\n  \"unmoderated\": {\n    \"id\": 1,\n    \"uuid\": \"a4d06965-cdfd-4c30-a672-95f5b38273e0\",\n    \"site\": \"https:\/\/example.com\",\n    \"tracker_session\": \"https:\/\/validately.com\/unmoderated\/a4d06965-cdfd-4c30-a672-95f5b38273e0?tracker_person_id=1&token=263deca5eb556e576cfd050a9f28409a\",\n    \"device\": \"desktop\",\n    \"browser_bar\": 0,\n    \"type\": \"unmoderated\",\n    \"email\": null,\n    \"tasks\": [\n      {\n        \"id\": 1,\n        \"task\": \"Task\",\n        \"start_url\": null,\n        \"end_url\": null,\n        \"questions\": []\n      }\n    ],\n    \"questions\": [\n      {\n        \"id\": 1,\n        \"question\": \"Question\",\n        \"type\": \"textarea\",\n        \"options\": [],\n        \"labels\": [],\n        \"questions\": null\n      },\n      {\n        \"id\": 2,\n        \"question\": \"Question\",\n        \"type\": \"radio\",\n        \"options\": {\n          \"3582baef-5678-4a93-a727-b0b1fde25b5a\": \"Option 1\",\n          \"30d431cc-c053-4657-8ff5-7155efcee50a\": \"Option 2\"\n        },\n        \"labels\": [],\n        \"questions\": {\n          \"3582baef-5678-4a93-a727-b0b1fde25b5a\": [\n            {\n              \"id\": 3,\n              \"question\": \"Question\",\n              \"type\": \"radio\",\n              \"options\": {\n                \"487a185d-6f16-41da-ba10-dd03cae1f025\": \"Option 1\",\n                \"adaa869e-1e4b-4712-9066-817da863794f\": \"Option 2\"\n              },\n              \"labels\": [],\n              \"questions\": []\n            }\n          ],\n          \"30d431cc-c053-4657-8ff5-7155efcee50a\": []\n        }\n      },\n      {\n        \"id\": 1,\n        \"question\": \"Question\",\n        \"type\": \"range\",\n        \"options\": [\n          \"0\",\n          \"1\",\n          \"2\",\n          \"3\",\n          \"4\",\n          \"5\",\n          \"6\",\n          \"7\",\n          \"8\",\n          \"9\",\n          \"10\"\n        ],\n        \"labels\": {\n          \"0\": \"Low\",\n          \"10\": \"High\"\n        },\n        \"questions\": null\n      }\n    ],\n    \"widget_title\": \"Title\",\n    \"widget_message\": \"Message\",\n    \"widget_button\": \"Button\",\n    \"audio\": \"0\",\n    \"audio_message\": \"Audio\",\n    \"welcome_tutorial_1\": \"Tutorial 1\",\n    \"welcome_tutorial_2\": \"Tutorial 2\",\n    \"task_instructions\": \"Instructions\",\n    \"preview\": false,\n    \"panel\": null,\n    \"protocol\": \"http\",\n    \"origin\": \"https:\/\/validately.com\",\n    \"sharable_url\": \"https:\/\/validately.com\/unmoderated\/a4d06965-cdfd-4c30-a672-95f5b38273e0\",\n    \"respondent\": null,\n    \"version\": \"2.0.0\"\n  },\n  \"moderated\": {\n    \"id\": 1,\n    \"uuid\": \"25a4665a-4281-420a-aadb-a419684545ab\",\n    \"site\": \"https:\/\/example.com\",\n    \"tracker_session\": \"https:\/\/validately.com\/moderated\/25a4665a-4281-420a-aadb-a419684545ab?tracker_person_id=1&token=6269ce141bafb528ea06ceb056b9ac8e\",\n    \"broadcast\": \"25a4665a-4281-420a-aadb-a419684545ab\",\n    \"device\": \"desktop\",\n    \"browser_bar\": 0,\n    \"type\": \"moderated\",\n    \"email\": null,\n    \"preview\": false,\n    \"panel\": null,\n    \"protocol\": \"http\",\n    \"origin\": \"https:\/\/validately.com\",\n    \"created\": \"2016-11-17 15:11:56\",\n    \"login_url\": \"https:\/\/validately.com\/users\/login?broadcastUrl=https%3A%2F%2Fstaging.validately.com%2Fmoderated%2F25a4665a-4281-420a-aadb-a419684545ab\",\n    \"sharable_url\": \"https:\/\/validately.com\/moderated\/25a4665a-4281-420a-aadb-a419684545ab\",\n    \"version\": \"2.0.0\",\n    \"api\": \"https:\/\/webrtc-api.validately.com\/v1\"\n  }\n}"
            }
          }
        }
      }
    },
    "\/tracker_shares\/{uuid}": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Tracker_Share-uuid"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Tracker Share",
        "responses": {
          "200": {
            "description": "Tracker Share",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application\/json": "{\n  \"id\": 1,\n  \"...\": \"...\",\n  \"tracker_clip\": {\n    \"id\": 1,\n    \"...\": \"...\",\n    \"tracker_person\": {\n      \"id\": 1,\n      \"...\": \"...\"\n    },\n  },\n  \"tracker_session\": {\n    \"id\": 1,\n    \"...\": \"...\",\n    \"tracker_person\": {\n      \"id\": 1,\n      \"...\": \"...\"\n    },\n    \"tracker_tasks\": [\n      {\n        \"id\": 1,\n        \"timestamp\": 1,\n        \"duration\": 1,\n        \"passed\": true,\n        \"feedback_task\": {\n          \"id\": 1,\n          \"...\": \"...\"\n        }\n      }\n    ],\n    \"tracker_flags\": [\n      {\n        \"id\": 1,\n        \"description\": \"Note\",\n        \"start\": 1,\n        \"user\": {\n          \"id\": 1,\n          \"name\": \"Name\"\n        }\n      },\n      {\n        \"id\": 2,\n        \"description\": null,\n        \"start\": 2,\n        \"user\": {\n          \"id\": 1,\n          \"name\": \"Name\"\n        }\n      }\n    ]\n  }\n}"
            }
          }
        }
      }
    },
    "\/plans": {
      "get": {
        "summary": "Plans",
        "responses": {
          "200": {
            "description": "Plans",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Plan"
              }
            }
          }
        }
      }
    },
    "\/products\/{id}\/samples": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Product-id"
        }
      ],
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create Feedback Survey samples",
        "description": "To create samples run `\/home\/ubuntu\/validately\/bin\/yiic products\/samples --id=1` which returns array of `id`s of samples e.g. `[{ id: 1 }, ...]`",
        "responses": {
          "200": {
            "description": "Feedback Survey",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Feedback_Survey"
              }
            }
          }
        }
      }
    },
    "\/products\/{id}\/invitations": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Product-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List invitations",
        "responses": {
          "200": {
            "description": "Invitations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Invitation"
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create invitation",
        "parameters": [
          {
            "name": "Invitation",
            "description": "Invitation",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "role"
              ],
              "properties": {
                "email": {
                  "$ref": "#\/definitions\/Invitation-email"
                },
                "role": {
                  "$ref": "#\/definitions\/Invitation-role"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation",
            "schema": {
              "$ref": "#\/definitions\/Invitation"
            }
          }
        }
      }
    },
    "\/invitations\/{token}\/": {
      "parameters": [
        {
          "name": "token",
          "description": "Token",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Invitation",
        "description": "Invitation `WHERE recipient_id IS NULL AND accepted IS NULL`\n\nIf `email` exists in `users` table set `recipient_id`",
        "responses": {
          "200": {
            "description": "Invitation",
            "schema": {
              "$ref": "#\/definitions\/Invitation"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Accept invitation",
        "parameters": [
          {
            "name": "Invitation",
            "description": "Invitation",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipient_id": {
                  "$ref": "#\/definitions\/Invitation-recipient_id"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation",
            "schema": {
              "$ref": "#\/definitions\/Invitation"
            }
          }
        }
      }
    },
    "\/products\/{id}\/users": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Product-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Users",
        "responses": {
          "200": {
            "description": "Users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Product-User"
              }
            }
          }
        }
      }
    },
    "\/invitations\/{id}": {
      "parameters": [
        {
          "$ref": "#\/parameters\/Invitation-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Invitation",
        "responses": {
          "200": {
            "description": "Invitation",
            "schema": {
              "$ref": "#\/definitions\/Invitation"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update invitation and role",
        "description": "Roles record should be updated too",
        "parameters": [
          {
            "name": "Invitation",
            "description": "Invitation",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "role"
              ],
              "properties": {
                "role": {
                  "$ref": "#\/definitions\/Invitation-role"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation",
            "schema": {
              "$ref": "#\/definitions\/Invitation"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete Product",
        "description": "Roles record should be deleted too",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "\/users\/login": {
      "post": {
        "summary": "Log in user",
        "x-google": false,
        "parameters": [
          {
            "name": "User",
            "description": "User",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "$ref": "#\/definitions\/User-email"
                },
                "password": {
                  "$ref": "#\/definitions\/User-password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "$ref": "#\/definitions\/User-Me"
            }
          }
        }
      }
    },
    "\/users\/register": {
      "post": {
        "summary": "Register user",
        "x-google": false,
        "parameters": [
          {
            "name": "User",
            "description": "User",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "email",
                "password"
              ],
              "properties": {
                "name": {
                  "$ref": "#\/definitions\/User-name"
                },
                "email": {
                  "$ref": "#\/definitions\/User-email"
                },
                "password": {
                  "$ref": "#\/definitions\/User-password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "$ref": "#\/definitions\/User-Me"
            }
          }
        }
      }
    },
    "\/users\/reset": {
      "post": {
        "summary": "Reset user password",
        "x-google": false,
        "parameters": [
          {
            "name": "User",
            "description": "User",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email"
              ],
              "properties": {
                "email": {
                  "$ref": "#\/definitions\/User-email"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "\/users\/{token}\/": {
      "parameters": [
        {
          "name": "token",
          "description": "Token",
          "in": "path",
          "required": true,
          "type": "string",
          "format": "date-time"
        }
      ],
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Set user password",
        "parameters": [
          {
            "name": "User",
            "description": "User",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "password"
              ],
              "properties": {
                "password": {
                  "$ref": "#\/definitions\/User-password"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "\/users\/google": {
      "post": {
        "summary": "Log in Google User",
        "parameters": [
          {
            "name": "User",
            "description": "User",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "email",
                "access_token"
              ],
              "properties": {
                "name": {
                  "$ref": "#\/definitions\/User-name"
                },
                "email": {
                  "$ref": "#\/definitions\/User-email"
                },
                "access_token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "$ref": "#\/definitions\/User-Me"
            }
          }
        }
      }
    },
    "\/users\/me": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "User",
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "$ref": "#\/definitions\/User-Me"
            }
          }
        }
      }
    },
    "\/users\/{id}": {
      "parameters": [
        {
          "$ref": "#\/parameters\/User-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "User",
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "$ref": "#\/definitions\/User"
            }
          }
        }
      },
      "post": {
        "summary": "Update user",
        "parameters": [
          {
            "name": "User",
            "description": "current_password is required when password is present",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "$ref": "#\/definitions\/User-name"
                },
                "email": {
                  "$ref": "#\/definitions\/User-email"
                },
                "password": {
                  "$ref": "#\/definitions\/User-password"
                },
                "current_password": {
                  "$ref": "#\/definitions\/User-password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "$ref": "#\/definitions\/User-Me"
            }
          }
        }
      }
    },
    "\/users\/{id}\/plan": {
      "parameters": [
        {
          "$ref": "#\/parameters\/User-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Plan",
        "description": "Plan of every owner of a product that you have access to with *expiry*",
        "responses": {
          "200": {
            "description": "Plan",
            "schema": {
              "$ref": "#\/definitions\/Plan-Me"
            }
          }
        }
      },
      "post": {
        "summary": "Plan",
        "description": "To upgrade run `\/home\/ubuntu\/validately\/bin\/yiic users\/upgrade --plan_id=1 --user_id=1 --charge=1`",
        "parameters": [
          {
            "name": "Plan",
            "description": "Plan",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "$ref": "#\/definitions\/Plan-id"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plan",
            "schema": {
              "$ref": "#\/definitions\/Plan-Me"
            }
          }
        }
      }
    },
    "\/users\/{id}\/asset": {
      "parameters": [
        {
          "$ref": "#\/parameters\/User-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Asset",
        "responses": {
          "200": {
            "description": "Asset",
            "schema": {
              "$ref": "#\/definitions\/Asset"
            }
          }
        }
      },
      "post": {
        "summary": "Create asset",
        "description": "To convert and save on GS run `\/home\/ubuntu\/validately\/bin\/yiic assets\/create --user_id=1 --file=\/tmp\/tmp.jpg`",
        "parameters": [
          {
            "name": "Asset",
            "description": "Asset",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "file"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "file": {
                  "$ref": "#\/definitions\/File"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product",
            "schema": {
              "$ref": "#\/definitions\/Asset"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete Asset",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "\/users\/{id}\/stripe_customer": {
      "parameters": [
        {
          "$ref": "#\/parameters\/User-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Stripe Customer",
        "responses": {
          "200": {
            "description": "Stripe Customer",
            "schema": {
              "$ref": "#\/definitions\/Stripe_Customer"
            }
          }
        }
      },
      "post": {
        "summary": "Create stripe customer",
        "parameters": [
          {
            "name": "Stripe Customer",
            "description": "Stripe Customer",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "stripe_token"
              ],
              "properties": {
                "stripe_token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stripe Customer",
            "schema": {
              "$ref": "#\/definitions\/Stripe_Customer"
            }
          }
        }
      }
    },
    "\/users\/{id}\/transactions": {
      "parameters": [
        {
          "$ref": "#\/parameters\/User-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Transactions",
        "description": "To get transactions in json format run `\/home\/ubuntu\/validately\/bin\/yiic users\/transactions --user_id=1`",
        "responses": {
          "200": {
            "description": "Transactions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Transaction"
              }
            }
          }
        }
      }
    },
    "\/users\/{id}\/feedback_tags": {
      "parameters": [
        {
          "$ref": "#\/parameters\/User-id"
        }
      ],
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List Feedback Tags",
        "responses": {
          "200": {
            "description": "Feedback Tags",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Feedback_Tag"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Status": {
      "description": "API status",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "description": "API status",
          "type": "string",
          "default": "OK"
        }
      }
    },
    "Id": {
      "description": "Id",
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "default": 1,
      "readOnly": true
    },
    "Uuid": {
      "description": "UUID",
      "type": "string",
      "format": "uuid",
      "example": "5e1d7d1a-4cdd-4c94-8f23-3bd7f38d0e2f",
      "readOnly": true
    },
    "Timestamp": {
      "description": "Timestamp",
      "type": "string",
      "format": "date-time",
      "x-nullable": true,
      "readOnly": true
    },
    "File": {
      "description": "File",
      "type": "string",
      "format": "byte"
    },
    "Transaction": {
      "description": "Transaction",
      "type": "object",
      "required": [
        "amount",
        "amount_refunded",
        "type",
        "description",
        "paid",
        "error",
        "created"
      ],
      "properties": {
        "amount": {
          "description": "Amount in cents",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "amount_refunded": {
          "description": "Amount refunded in cents",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "default": 0
        },
        "type": {
          "description": "Type",
          "type": "string",
          "enum": [
            "charge",
            "payment",
            "teammate"
          ]
        },
        "description": {
          "description": "Description",
          "type": "string"
        },
        "paid": {
          "description": "Paid",
          "type": "boolean"
        },
        "error": {
          "description": "Error",
          "type": "string"
        },
        "created": {
          "$ref": "#\/definitions\/Timestamp"
        }
      }
    },
    "Asset": {
      "type": "object",
      "required": [
        "id",
        "uuid",
        "extension",
        "width",
        "height",
        "width_original",
        "height_original"
      ],
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Asset-id"
        },
        "uuid": {
          "$ref": "#\/definitions\/Uuid"
        },
        "extension": {
          "description": "Extension",
          "type": "string"
        },
        "width": {
          "description": "Width",
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "description": "Height",
          "type": "integer",
          "format": "int32"
        },
        "width_original": {
          "description": "Width",
          "type": "integer",
          "format": "int32"
        },
        "height_original": {
          "description": "Height",
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "description": "URL",
          "type": "string",
          "format": "url",
          "readOnly": true
        },
        "url_original": {
          "description": "Original URL",
          "type": "string",
          "format": "url",
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "Asset-id": {
      "$ref": "#\/definitions\/Id"
    },
    "Stripe_Customer": {
      "type": "object",
      "required": [
        "id",
        "stripe_object"
      ],
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Stripe_Customer-id"
        },
        "stripe_object": {
          "type": "object",
          "format": "json"
        }
      }
    },
    "Stripe_Customer-id": {
      "$ref": "#\/definitions\/Id"
    },
    "Tracker_Person": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Tracker_Person-id"
        },
        "uuid": {
          "$ref": "#\/definitions\/Uuid"
        },
        "name": {
          "$ref": "#\/definitions\/Tracker_Person-name"
        },
        "email": {
          "$ref": "#\/definitions\/Tracker_Person-email"
        },
        "created": {
          "$ref": "#\/definitions\/Timestamp"
        },
        "completed": {
          "$ref": "#\/definitions\/Timestamp"
        }
      },
      "additionalProperties": false
    },
    "Tracker_Person-id": {
      "$ref": "#\/definitions\/Id"
    },
    "Tracker_Person-name": {
      "description": "Name",
      "type": "string"
    },
    "Tracker_Person-email": {
      "description": "Email",
      "type": "string",
      "format": "email"
    },
    "Feedback_Survey": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Feedback_Survey-id"
        },
        "uuid": {
          "$ref": "#\/definitions\/Uuid"
        },
        "name": {
          "$ref": "#\/definitions\/Feedback_Survey-name"
        },
        "type": {
          "$ref": "#\/definitions\/Feedback_Survey-type"
        },
        "url": {
          "$ref": "#\/definitions\/Feedback_Survey-url"
        },
        "source": {
          "$ref": "#\/definitions\/Feedback_Survey-source"
        },
        "screener": {
          "$ref": "#\/definitions\/Feedback_Survey-screener"
        },
        "show": {
          "$ref": "#\/definitions\/Feedback_Survey-show"
        },
        "respondents": {
          "$ref": "#\/definitions\/Feedback_Survey-respondents"
        },
        "email": {
          "$ref": "#\/definitions\/Feedback_Survey-email"
        },
        "paused": {
          "$ref": "#\/definitions\/Timestamp"
        },
        "launched": {
          "$ref": "#\/definitions\/Feedback_Survey-launched"
        },
        "completed": {
          "$ref": "#\/definitions\/Timestamp"
        },
        "closed": {
          "$ref": "#\/definitions\/Timestamp"
        },
        "sample": {
          "$ref": "#\/definitions\/Feedback_Survey-sample"
        },
        "title": {
          "$ref": "#\/definitions\/Feedback_Survey-title"
        },
        "message": {
          "$ref": "#\/definitions\/Feedback_Survey-message"
        },
        "button": {
          "$ref": "#\/definitions\/Feedback_Survey-button"
        },
        "bar": {
          "$ref": "#\/definitions\/Feedback_Survey-bar"
        },
        "created": {
          "$ref": "#\/definitions\/Timestamp"
        },
        "updated": {
          "$ref": "#\/definitions\/Timestamp"
        },
        "status": {
          "$ref": "#\/definitions\/Feedback_Survey-status"
        },
        "test_price": {
          "$ref": "#\/definitions\/Feedback_Survey-test_price"
        },
        "source_price": {
          "$ref": "#\/definitions\/Feedback_Survey-source_price"
        },
        "upgrade": {
          "$ref": "#\/definitions\/Feedback_Survey-upgrade"
        },
        "sharable_url": {
          "$ref": "#\/definitions\/Feedback_Survey-sharable_url"
        },
        "completes": {
          "$ref": "#\/definitions\/Feedback_Survey-completes"
        }
      },
      "additionalProperties": false
    },
    "Feedback_Survey-id": {
      "$ref": "#\/definitions\/Id"
    },
    "Feedback_Survey-name": {
      "description": "Name",
      "type": "string"
    },
    "Feedback_Survey-type": {
      "description": "Type",
      "type": "string",
      "enum": [
        "unmoderated",
        "moderated"
      ]
    },
    "Feedback_Survey-url": {
      "description": "URL",
      "type": "string",
      "format": "url",
      "x-nullable": true
    },
    "Feedback_Survey-source": {
      "description": "Source",
      "type": "string",
      "enum": [
        "url",
        "panel"
      ],
      "default": "url"
    },
    "Feedback_Survey-screener": {
      "description": "Screener cannot be `true` for `type = 'moderated' AND source = 'url'`",
      "type": "boolean",
      "default": false
    },
    "Feedback_Survey-show": {
      "description": "Show",
      "type": "string",
      "enum": [
        "desktop",
        "mobile",
        "native"
      ],
      "default": "desktop"
    },
    "Feedback_Survey-email": {
      "description": "Name and email requirement (null not required)",
      "type": "string",
      "enum": [
        "optional",
        "required"
      ],
      "x-nullable": true
    },
    "Feedback_Survey-launched": {
      "description": "Always run `\/home\/ubuntu\/validately\/bin\/yiic feedback\/charge --id=1 --charge=1` before launching which should exit with status 0 and is idempotent",
      "type": "string",
      "format": "date-time",
      "readOnly": true
    },
    "Feedback_Survey-respondents": {
      "description": "Respondents",
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "default": 1,
      "x-nullable": true
    },
    "Feedback_Survey-paused": {
      "description": "Paused",
      "type": "string",
      "format": "date-time"
    },
    "Feedback_Survey-sample": {
      "description": "If it's a sample prototype",
      "type": "boolean",
      "default": false,
      "readOnly": true
    },
    "Feedback_Survey-title": {
      "description": "Title",
      "type": "string",
      "x-nullable": true
    },
    "Feedback_Survey-message": {
      "description": "Message",
      "type": "string",
      "x-nullable": true
    },
    "Feedback_Survey-button": {
      "description": "Button",
      "type": "string",
      "x-nullable": true
    },
    "Feedback_Survey-bar": {
      "description": "Show browser bar",
      "type": "boolean",
      "default": false
    },
    "Feedback_Survey-status": {
      "description": "To get `status` run `\/home\/ubuntu\/validately\/bin\/yiic feedback\/status --id=1` which returns json with status e.g. `{status: Pending}`\n\nFor invalid `id` exits with non zero code and returns `{status: null}`",
      "type": "string",
      "enum": [
        "Pending",
        "Active",
        "Paused",
        "Completed",
        "Closed"
      ],
      "default": "Pending",
      "readOnly": true
    },
    "Feedback_Survey-test_price": {
      "description": "Price for launching when user hits plan limit and should be returned\/is relevant when `feedback_surveys.status = 'Pending'`\n\nTo get `test_price` (and `source_price`) run `\/home\/ubuntu\/validately\/bin\/yiic feedback\/price --id=1` which returns json e.g. `{test_price: 4900, source_price: 0}`\n\nFor invalid `id` exits with non zero code and returns `{test_price: null, source_price: null}`",
      "type": "integer",
      "format": "int32",
      "default": 0,
      "readOnly": true
    },
    "Feedback_Survey-source_price": {
      "description": "Price for panelists",
      "type": "integer",
      "format": "int32",
      "default": 0,
      "readOnly": true
    },
    "Feedback_Survey-upgrade": {
      "description": "If owner needs to upgrade account to be able to launch, relevant when `feedback_surveys.status = 'Pending'`\n\nTo get `upgrade` run `\/home\/ubuntu\/validately\/bin\/yiic feedback\/upgrade --id=1` which returns json e.g. `{upgrade: true}`\n\nFor invalid `id` exits with non zero code and returns `{upgrade: null}`",
      "type": "boolean",
      "default": true,
      "readOnly": true
    },
    "Feedback_Survey-sharable_url": {
      "description": "Sharable url in a `https:\/\/{domain}\/{type}\/{uuid}` format\n\nPresent when `feedback_surveys.status != 'Pending' AND feedback_surveys.source = 'url'`",
      "type": "string",
      "format": "url",
      "readOnly": true
    },
    "Feedback_Survey-completes": {
      "description": "To get `completes` run `\/home\/ubuntu\/validately\/bin\/yiic feedback\/completes --id=1` which returns json e.g. `{completes: 1}`\n\nFor invalid `id` exits with non zero code and returns `{completes: null}`",
      "type": "integer",
      "format": "int32",
      "default": 0,
      "readOnly": true
    },
    "Feedback_Tag": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Feedback_Tag-id"
        },
        "tag": {
          "$ref": "#\/definitions\/Feedback_Tag-tag"
        }
      },
      "additionalProperties": false
    },
    "Feedback_Tag-id": {
      "$ref": "#\/definitions\/Id"
    },
    "Feedback_Tag-tag": {
      "description": "Regexp that matches tag in text `(^|\\s)#(([A-Za-z])|([A-Za-z_][A-Za-z0-9_]{1,254}))`",
      "type": "string"
    },
    "Product": {
      "description": "Product",
      "type": "object",
      "required": [
        "id",
        "name",
        "role"
      ],
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Product-id"
        },
        "name": {
          "$ref": "#\/definitions\/Product-name"
        },
        "role": {
          "$ref": "#\/definitions\/Product-role"
        },
        "expired": {
          "$ref": "#\/definitions\/Product-expired"
        }
      },
      "additionalProperties": false
    },
    "Product-User": {
      "description": "User",
      "type": "object",
      "required": [
        "id",
        "name",
        "email",
        "role"
      ],
      "properties": {
        "id": {
          "$ref": "#\/definitions\/User-id"
        },
        "name": {
          "$ref": "#\/definitions\/User-name"
        },
        "email": {
          "$ref": "#\/definitions\/User-email"
        },
        "role": {
          "$ref": "#\/definitions\/Product-role"
        }
      },
      "additionalProperties": false
    },
    "Product-id": {
      "$ref": "#\/definitions\/Id"
    },
    "Product-name": {
      "description": "Name",
      "type": "string",
      "default": "Workspace 1"
    },
    "Product-role": {
      "description": "Role",
      "type": "string",
      "enum": [
        "owner",
        "admin",
        "teammate"
      ]
    },
    "Product-expired": {
      "description": "Expired",
      "type": "boolean",
      "readOnly": true
    },
    "Feedback_Task": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Feedback_Task-id"
        },
        "task": {
          "$ref": "#\/definitions\/Feedback_Task-task"
        },
        "start_url": {
          "$ref": "#\/definitions\/Feedback_Task-start_url"
        },
        "end_url": {
          "$ref": "#\/definitions\/Feedback_Task-end_url"
        },
        "sequence": {
          "$ref": "#\/definitions\/Feedback_Task-sequence"
        }
      },
      "additionalProperties": false
    },
    "Feedback_Task-id": {
      "$ref": "#\/definitions\/Id"
    },
    "Feedback_Task-task": {
      "description": "Task",
      "type": "string"
    },
    "Feedback_Task-start_url": {
      "description": "Start Url",
      "type": "string",
      "format": "url"
    },
    "Feedback_Task-end_url": {
      "description": "End Url",
      "type": "string",
      "format": "url"
    },
    "Feedback_Task-sequence": {
      "description": "Sequence",
      "type": "integer",
      "format": "int32",
      "minimum": 0
    },
    "Feedback_Task-sequence-update": {
      "description": "Sequence",
      "type": "integer",
      "format": "int32",
      "maximum": 1,
      "minimum": -1
    },
    "Feedback_Input": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Feedback_Input-id"
        },
        "label": {
          "$ref": "#\/definitions\/Feedback_Input-label"
        },
        "type": {
          "$ref": "#\/definitions\/Feedback_Input-type"
        },
        "options": {
          "$ref": "#\/definitions\/Feedback_Input-options"
        },
        "sequence": {
          "$ref": "#\/definitions\/Feedback_Input-sequence"
        },
        "parent": {
          "$ref": "#\/definitions\/Feedback_Input-parent"
        }
      },
      "additionalProperties": false
    },
    "Feedback_Input-id": {
      "$ref": "#\/definitions\/Id"
    },
    "Feedback_Input-label": {
      "description": "Label",
      "type": "string"
    },
    "Feedback_Input-type": {
      "description": "Type",
      "type": "string",
      "enum": [
        "textarea",
        "radio",
        "range"
      ]
    },
    "Feedback_Input-options": {
      "description": "For `type = \"radio\"` format `[{\"label\": \"option\", \"value\": \"uuid\"}, ...]` e.g. `[{\"label\": \"Daily\", \"value\": \"9dcbfd24-8f8d-4212-9c4f-921ea24799bf\"}]`\nFor `type = \"range\"` format `[{\"label\": \"option\", \"value\": \"int\"}, ...]` e.g. `[{\"label\": \"Low\", \"value\": \"1\"}, {\"label\": \"2\", \"value\": \"2\"}]`",
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "label",
          "value"
        ],
        "properties": {
          "label": {
            "description": "Label",
            "type": "string"
          },
          "value": {
            "description": "Value",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "x-nullable": true
    },
    "Feedback_Input-sequence": {
      "description": "Sequence",
      "type": "integer",
      "format": "int32",
      "minimum": 0
    },
    "Feedback_Input-sequence-update": {
      "description": "Sequence",
      "type": "integer",
      "maximum": 1,
      "minimum": -1
    },
    "Feedback_Input-parent": {
      "description": "Can be `true` for `feedback_inputs.type = 'radio'`",
      "type": "boolean",
      "default": false,
      "readOnly": true
    },
    "Tracker_Session": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Tracker_Session-id"
        },
        "os": {
          "$ref": "#\/definitions\/Tracker_Session-os"
        },
        "browser": {
          "$ref": "#\/definitions\/Tracker_Session-browser"
        },
        "duration": {
          "$ref": "#\/definitions\/Tracker_Session-duration"
        },
        "completed": {
          "$ref": "#\/definitions\/Tracker_Session-completed"
        },
        "generated": {
          "$ref": "#\/definitions\/Tracker_Session-generated"
        },
        "url": {
          "$ref": "#\/definitions\/Tracker_Session-url"
        },
        "rate": {
          "$ref": "#\/definitions\/Tracker_Session-rate"
        },
        "rating": {
          "$ref": "#\/definitions\/Tracker_Session-rating"
        },
        "feedback": {
          "$ref": "#\/definitions\/Tracker_Session-feedback"
        }
      },
      "additionalProperties": false
    },
    "Tracker_Session-id": {
      "$ref": "#\/definitions\/Id"
    },
    "Tracker_Session-os": {
      "description": "OS",
      "type": "string"
    },
    "Tracker_Session-browser": {
      "description": "Browser",
      "type": "string"
    },
    "Tracker_Session-duration": {
      "description": "Duration",
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "default": 1
    },
    "Tracker_Session-completed": {
      "$ref": "#\/definitions\/Timestamp"
    },
    "Tracker_Session-generated": {
      "$ref": "#\/definitions\/Timestamp"
    },
    "Tracker_Session-url": {
      "description": "To get `url` run `\/home\/ubuntu\/validately\/bin\/yiic tracker\/url --tracker_session_id=1,2` which returns json with status e.g. `[{id: 1, url: \"url\"}, {id: 2, url: \"url\"}]`",
      "type": "string",
      "format": "url",
      "readOnly": true
    },
    "Tracker_Session-rate": {
      "description": "If session can be rated",
      "type": "boolean",
      "default": false,
      "readOnly": true
    },
    "Tracker_Session-rating": {
      "description": "Rating",
      "type": "string",
      "enum": [
        1,
        2,
        3
      ],
      "x-nullable": true
    },
    "Tracker_Session-feedback": {
      "description": "Feedback",
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "value",
          "feedback"
        ],
        "properties": {
          "value": {
            "description": "Valid values for `rating = 1` are `[\"e60ec425-36b4-448b-b02c-059e20095605\", \"d6de7916-2653-418d-b837-72b482a569ec\", \"224c7ed0-0ab6-42e4-a356-38574f8e269a\", \"284fc341-9816-4155-8a8d-c709a525c95b\", \"1487f84e-b779-4817-aff8-1c2997d95bbc\"]`\nValid values for `rating = 2` are `[\"d90b7a29-9f82-44e9-a54b-7e92c3738061\", \"87492580-b4ca-412f-a3fb-9a1b9ac1461a\", \"4fcb7cef-39bb-4b32-a34a-88a7f8f8135a\", \"0c337027-f534-4b24-a21d-f00b6f5458a3\"]`",
            "type": "string",
            "enum": [
              "e60ec425-36b4-448b-b02c-059e20095605",
              "d6de7916-2653-418d-b837-72b482a569ec",
              "224c7ed0-0ab6-42e4-a356-38574f8e269a",
              "284fc341-9816-4155-8a8d-c709a525c95b",
              "1487f84e-b779-4817-aff8-1c2997d95bbc",
              "d90b7a29-9f82-44e9-a54b-7e92c3738061",
              "87492580-b4ca-412f-a3fb-9a1b9ac1461a",
              "4fcb7cef-39bb-4b32-a34a-88a7f8f8135a",
              "0c337027-f534-4b24-a21d-f00b6f5458a3"
            ]
          },
          "feedback": {
            "description": "Feedback",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "x-nullable": true
    },
    "Tracker_Clip": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Tracker_Clip-id"
        },
        "name": {
          "$ref": "#\/definitions\/Tracker_Clip-name"
        },
        "start": {
          "$ref": "#\/definitions\/Tracker_Clip-start"
        },
        "end": {
          "$ref": "#\/definitions\/Tracker_Clip-end"
        },
        "generated": {
          "$ref": "#\/definitions\/Tracker_Clip-generated"
        },
        "url": {
          "$ref": "#\/definitions\/Tracker_Clip-url"
        },
        "tracker_session_id": {
          "$ref": "#\/definitions\/Tracker_Clip-tracker_session_id"
        }
      },
      "additionalProperties": false
    },
    "Tracker_Clip-id": {
      "$ref": "#\/definitions\/Id"
    },
    "Tracker_Clip-name": {
      "description": "Name",
      "type": "string"
    },
    "Tracker_Clip-start": {
      "description": "Start",
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "default": 0
    },
    "Tracker_Clip-end": {
      "description": "End",
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "default": 1
    },
    "Tracker_Clip-generated": {
      "$ref": "#\/definitions\/Timestamp"
    },
    "Tracker_Clip-url": {
      "description": "To get `url` run `\/home\/ubuntu\/validately\/bin\/yiic tracker\/url --tracker_clip_id=1,2` which returns json with status e.g. `[{id: 1, url: \"url\"}, {id: 2, url: \"url\"}]`",
      "type": "string",
      "format": "url",
      "readOnly": false
    },
    "Tracker_Clip-tracker_session_id": {
      "$ref": "#\/definitions\/Tracker_Session-id"
    },
    "Tracker_Flag": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Tracker_Flag-id"
        },
        "description": {
          "$ref": "#\/definitions\/Tracker_Flag-description"
        },
        "start": {
          "$ref": "#\/definitions\/Tracker_Flag-start"
        },
        "tracker_session_id": {
          "$ref": "#\/definitions\/Tracker_Flag-tracker_session_id"
        }
      },
      "additionalProperties": false
    },
    "Tracker_Flag-id": {
      "$ref": "#\/definitions\/Id"
    },
    "Tracker_Flag-description": {
      "description": "Description",
      "type": "string",
      "x-nullable": true
    },
    "Tracker_Flag-start": {
      "description": "Start",
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "default": 0
    },
    "Tracker_Flag-tracker_session_id": {
      "$ref": "#\/definitions\/Tracker_Session-id"
    },
    "Tracker_Task": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Tracker_Task-id"
        },
        "task": {
          "$ref": "#\/definitions\/Tracker_Task-task"
        },
        "start_url": {
          "$ref": "#\/definitions\/Tracker_Task-start_url"
        },
        "timestamp": {
          "$ref": "#\/definitions\/Tracker_Task-timestamp"
        },
        "duration": {
          "$ref": "#\/definitions\/Tracker_Task-duration"
        },
        "passed": {
          "$ref": "#\/definitions\/Tracker_Task-passed"
        }
      },
      "additionalProperties": false
    },
    "Tracker_Task-id": {
      "$ref": "#\/definitions\/Id"
    },
    "Tracker_Task-task": {
      "description": "Task from `feedback_tasks.task`",
      "type": "string"
    },
    "Tracker_Task-start_url": {
      "description": "Start url from `feedback_tasks.start_url`",
      "type": "string",
      "format": "url"
    },
    "Tracker_Task-timestamp": {
      "description": "Timestamp",
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "default": 0
    },
    "Tracker_Task-duration": {
      "description": "Duration",
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "default": 1
    },
    "Tracker_Task-passed": {
      "description": "Passed\/Failed",
      "type": "boolean",
      "x-nullable": true
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "description": "HTTP status code",
          "type": "integer",
          "format": "int32",
          "enum": [
            400,
            401,
            403,
            404,
            405,
            500,
            502,
            503,
            504
          ]
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Tracker_Share": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Tracker_Share-id"
        },
        "uuid": {
          "$ref": "#\/definitions\/Uuid"
        },
        "sharable_url": {
          "$ref": "#\/definitions\/Tracker_Share-sharable_url"
        },
        "created": {
          "$ref": "#\/definitions\/Timestamp"
        }
      },
      "additionalProperties": false
    },
    "Tracker_Share-id": {
      "$ref": "#\/definitions\/Id"
    },
    "Tracker_Share-sharable_url": {
      "description": "Sharable url in a `https:\/\/{domain}\/shares\/{uuid}` format",
      "type": "string",
      "format": "url"
    },
    "Plan": {
      "description": "Plan",
      "type": "object",
      "required": [
        "id",
        "name",
        "type",
        "moderated",
        "screener",
        "price",
        "tests",
        "products",
        "users",
        "unmoderated_limit",
        "moderated_limit",
        "unmoderated_price",
        "moderated_price",
        "panel_unmoderated_price",
        "panel_moderated_price",
        "free_trial"
      ],
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Plan-id"
        },
        "name": {
          "$ref": "#\/definitions\/Plan-name"
        },
        "type": {
          "$ref": "#\/definitions\/Plan-type"
        },
        "moderated": {
          "$ref": "#\/definitions\/Plan-moderated"
        },
        "screener": {
          "$ref": "#\/definitions\/Plan-screener"
        },
        "price": {
          "$ref": "#\/definitions\/Plan-price"
        },
        "tests": {
          "$ref": "#\/definitions\/Plan-tests"
        },
        "products": {
          "$ref": "#\/definitions\/Plan-products"
        },
        "users": {
          "$ref": "#\/definitions\/Plan-users"
        },
        "unmoderated_limit": {
          "$ref": "#\/definitions\/Plan-unmoderated_limit"
        },
        "moderated_limit": {
          "$ref": "#\/definitions\/Plan-moderated_limit"
        },
        "unmoderated_price": {
          "$ref": "#\/definitions\/Plan-unmoderated_price"
        },
        "moderated_price": {
          "$ref": "#\/definitions\/Plan-moderated_price"
        },
        "panel_unmoderated_price": {
          "$ref": "#\/definitions\/Plan-panel_unmoderated_price"
        },
        "panel_moderated_price": {
          "$ref": "#\/definitions\/Plan-panel_moderated_price"
        },
        "free_trial": {
          "$ref": "#\/definitions\/Plan-free_trial"
        }
      },
      "additionalProperties": false
    },
    "Plan-Me": {
      "description": "Plan me",
      "type": "object",
      "required": [
        "id",
        "name",
        "type",
        "moderated",
        "screener",
        "price",
        "tests",
        "products",
        "users",
        "unmoderated_limit",
        "moderated_limit",
        "moderated_price",
        "panel_unmoderated_price",
        "panel_moderated_price",
        "free_trial",
        "expiry",
        "credit_plan",
        "credit_panel",
        "tests_usage",
        "products_usage",
        "users_usage",
        "invitations_usage",
        "unmoderated_usage",
        "moderated_usage"
      ],
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Plan-id"
        },
        "name": {
          "$ref": "#\/definitions\/Plan-name"
        },
        "type": {
          "$ref": "#\/definitions\/Plan-type"
        },
        "moderated": {
          "$ref": "#\/definitions\/Plan-moderated"
        },
        "price": {
          "$ref": "#\/definitions\/Plan-price"
        },
        "tests": {
          "$ref": "#\/definitions\/Plan-tests"
        },
        "products": {
          "$ref": "#\/definitions\/Plan-products"
        },
        "users": {
          "$ref": "#\/definitions\/Plan-users"
        },
        "unmoderated_limit": {
          "$ref": "#\/definitions\/Plan-unmoderated_limit"
        },
        "moderated_limit": {
          "$ref": "#\/definitions\/Plan-moderated_limit"
        },
        "unmoderated_price": {
          "$ref": "#\/definitions\/Plan-unmoderated_price"
        },
        "moderated_price": {
          "$ref": "#\/definitions\/Plan-moderated_price"
        },
        "panel_unmoderated_price": {
          "$ref": "#\/definitions\/Plan-panel_unmoderated_price"
        },
        "panel_moderated_price": {
          "$ref": "#\/definitions\/Plan-panel_moderated_price"
        },
        "free_trial": {
          "$ref": "#\/definitions\/Plan-free_trial"
        },
        "expiry": {
          "$ref": "#\/definitions\/Plan-expiry"
        },
        "credit_plan": {
          "$ref": "#\/definitions\/Plan-credit_plan"
        },
        "credit_panel": {
          "$ref": "#\/definitions\/Plan-credit_panel"
        },
        "tests_usage": {
          "$ref": "#\/definitions\/Plan-usage"
        },
        "products_usage": {
          "$ref": "#\/definitions\/Plan-usage"
        },
        "users_usage": {
          "$ref": "#\/definitions\/Plan-usage"
        },
        "invitations_usage": {
          "$ref": "#\/definitions\/Plan-usage"
        },
        "unmoderated_usage": {
          "$ref": "#\/definitions\/Plan-usage"
        },
        "moderated_usage": {
          "$ref": "#\/definitions\/Plan-usage"
        }
      },
      "additionalProperties": false
    },
    "Plan-id": {
      "$ref": "#\/definitions\/Id"
    },
    "Plan-name": {
      "description": "Name",
      "type": "string",
      "example": "Experience"
    },
    "Plan-type": {
      "description": "Type",
      "type": "string",
      "enum": [
        "month",
        "year"
      ]
    },
    "Plan-moderated": {
      "description": "Moderated flag",
      "type": "boolean"
    },
    "Plan-screener": {
      "description": "Screener flag",
      "type": "boolean"
    },
    "Plan-price": {
      "description": "Price in cents (0 when free_trial)",
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "example": 9900
    },
    "Plan-tests": {
      "description": "Tests limit",
      "type": "integer",
      "format": "int32",
      "example": 3,
      "x-nullable": true
    },
    "Plan-products": {
      "description": "Products limit",
      "type": "integer",
      "format": "int32",
      "example": 3,
      "x-nullable": true
    },
    "Plan-users": {
      "description": "Users limit",
      "type": "integer",
      "format": "int32",
      "example": 3,
      "x-nullable": true
    },
    "Plan-unmoderated_limit": {
      "description": "Unmoderated responses limit",
      "type": "integer",
      "format": "int32",
      "example": 5,
      "x-nullable": true
    },
    "Plan-moderated_limit": {
      "description": "Moderated responses limit",
      "type": "integer",
      "format": "int32",
      "example": 5,
      "x-nullable": true
    },
    "Plan-unmoderated_price": {
      "description": "Moderated over limit price in cents",
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "example": 4900
    },
    "Plan-moderated_price": {
      "description": "Moderated over limit price in cents",
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "example": 12500
    },
    "Plan-panel_unmoderated_price": {
      "description": "Panel unmoderated panelist price in cents",
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "example": 1500
    },
    "Plan-panel_moderated_price": {
      "description": "Panel moderated panelist price in cents",
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "example": 5000
    },
    "Plan-free_trial": {
      "description": "Free trial flag",
      "type": "boolean"
    },
    "Plan-expiry": {
      "$ref": "#\/definitions\/Timestamp"
    },
    "Plan-credit_plan": {
      "description": "Credit plan",
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "readOnly": true
    },
    "Plan-credit_panel": {
      "description": "Credit panel",
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "example": 0,
      "readOnly": true
    },
    "Plan-usage": {
      "description": "Usage",
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "readOnly": true,
      "x-nullable": true
    },
    "Invitation": {
      "type": "object",
      "required": [
        "id",
        "email",
        "role",
        "recipient_id",
        "sent"
      ],
      "properties": {
        "id": {
          "$ref": "#\/definitions\/Invitation-id"
        },
        "email": {
          "$ref": "#\/definitions\/Invitation-email"
        },
        "recipient_id": {
          "$ref": "#\/definitions\/Invitation-recipient_id"
        },
        "role": {
          "$ref": "#\/definitions\/Invitation-role"
        },
        "sent": {
          "$ref": "#\/definitions\/Timestamp"
        }
      },
      "additionalProperties": false
    },
    "Invitation-id": {
      "$ref": "#\/definitions\/Id"
    },
    "Invitation-email": {
      "$ref": "#\/definitions\/User-email"
    },
    "Invitation-role": {
      "$ref": "#\/definitions\/Product-role"
    },
    "Invitation-recipient_id": {
      "$ref": "#\/definitions\/User-id"
    },
    "User": {
      "description": "User",
      "type": "object",
      "required": [
        "id",
        "name",
        "email"
      ],
      "properties": {
        "id": {
          "$ref": "#\/definitions\/User-id"
        },
        "name": {
          "$ref": "#\/definitions\/User-name"
        },
        "email": {
          "$ref": "#\/definitions\/User-email"
        }
      },
      "additionalProperties": false
    },
    "User-Me": {
      "description": "User Me",
      "type": "object",
      "required": [
        "id",
        "name",
        "email",
        "jwt"
      ],
      "properties": {
        "id": {
          "$ref": "#\/definitions\/User-id"
        },
        "name": {
          "$ref": "#\/definitions\/User-name"
        },
        "email": {
          "$ref": "#\/definitions\/User-email"
        },
        "jwt": {
          "$ref": "#\/definitions\/User-jwt"
        }
      },
      "additionalProperties": false
    },
    "User-id": {
      "$ref": "#\/definitions\/Id"
    },
    "User-name": {
      "description": "Name",
      "type": "string",
      "default": "Example"
    },
    "User-email": {
      "description": "Email",
      "type": "string",
      "format": "email",
      "default": "example@example.com"
    },
    "User-password": {
      "description": "Password",
      "type": "string"
    },
    "User-jwt": {
      "description": "JWT",
      "type": "string",
      "readOnly": true
    }
  },
  "parameters": {
    "Feedback_Survey-id": {
      "name": "id",
      "description": "Feedback Survey Id",
      "in": "path",
      "required": true,
      "type": "integer",
      "format": "int32",
      "minimum": 1
    },
    "Feedback_Survey-uuid": {
      "name": "uuid",
      "description": "Feedback Survey Uuid",
      "in": "path",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "Feedback_Tag-id": {
      "name": "id",
      "description": "Feedback Tag Id",
      "in": "path",
      "required": true,
      "type": "integer",
      "format": "int32",
      "minimum": 1
    },
    "Product-id": {
      "name": "id",
      "description": "Product Id",
      "in": "path",
      "required": true,
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "default": 1
    },
    "Feedback_Task-id": {
      "name": "id",
      "description": "Feedback Task Id",
      "in": "path",
      "required": true,
      "type": "integer",
      "format": "int32",
      "minimum": 1
    },
    "Feedback_Input-id": {
      "name": "id",
      "description": "Feedback Input Id",
      "in": "path",
      "required": true,
      "type": "integer",
      "format": "int32",
      "minimum": 1
    },
    "Tracker_Session-id": {
      "name": "id",
      "description": "Tracker Session Id",
      "in": "path",
      "required": true,
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "default": 1
    },
    "Tracker_Clip-id": {
      "name": "id",
      "description": "Tracker Clip Id",
      "in": "path",
      "required": true,
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "default": 1
    },
    "Tracker_Flag-id": {
      "name": "id",
      "description": "Tracker Flag Id",
      "in": "path",
      "required": true,
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "default": 1
    },
    "Tracker_Task-id": {
      "name": "id",
      "description": "Tracker Task Id",
      "in": "path",
      "required": true,
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "default": 1
    },
    "Tracker_Share-uuid": {
      "name": "uuid",
      "description": "Tracker Share Uuid",
      "in": "path",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "Invitation-id": {
      "name": "id",
      "description": "Invitation Id",
      "in": "path",
      "required": true,
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "default": 1
    },
    "User-id": {
      "name": "id",
      "description": "Id or special `me` value e.g. `\/users\/me`",
      "in": "path",
      "required": true,
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "default": 1
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#\/definitions\/Error"
      },
      "examples": {
        "application\/json": {
          "code": 400,
          "message": "Bad Request"
        }
      }
    },
    "401": {
      "description": "Unauthorized",
      "schema": {
        "$ref": "#\/definitions\/Error"
      },
      "examples": {
        "application\/json": {
          "code": 401,
          "message": "Unauthorized"
        }
      }
    },
    "403": {
      "description": "Forbidden",
      "schema": {
        "$ref": "#\/definitions\/Error"
      }
    },
    "404": {
      "description": "Not Found",
      "schema": {
        "$ref": "#\/definitions\/Error"
      }
    },
    "405": {
      "description": "Method Not Allowed",
      "schema": {
        "$ref": "#\/definitions\/Error"
      }
    },
    "500": {
      "description": "Internal Server Error",
      "schema": {
        "$ref": "#\/definitions\/Error"
      }
    },
    "502": {
      "description": "Bad Gateway",
      "schema": {
        "$ref": "#\/definitions\/Error"
      }
    },
    "503": {
      "description": "Service Unavailable",
      "schema": {
        "$ref": "#\/definitions\/Error"
      }
    },
    "504": {
      "description": "Gateway Timeout",
      "schema": {
        "$ref": "#\/definitions\/Error"
      }
    }
  }
}
